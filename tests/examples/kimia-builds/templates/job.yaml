{{- $cmName := printf "%s-%s" (include "kimia-builds.fullname" .) .Values.volumeNames.registriesConf -}}

{{/* Collect builds from values + every file in examples/builds/*.yaml */}}
{{- $all := list -}}

{{- /* 1) Start with builds from values.yaml (if any) */ -}}
{{- range .Values.builds }}
  {{- $all = append $all . }}
{{- end }}

{{- /* 2) Load each examples/builds/*.yaml and append its builds */ -}}
{{- $root := . -}}
{{- range $path, $_ := .Files.Glob "examples/builds/*.yaml" }}
  {{- $raw := $root.Files.Get $path }}
  {{- $doc := fromYaml $raw }}
  {{- if kindIs "map" $doc }}
    {{- if hasKey $doc "builds" }}
      {{- range $doc.builds }}
        {{- $all = append $all . }}
      {{- end }}
    {{- else }}
      {{- $all = append $all $doc }}
    {{- end }}
  {{- else if kindIs "slice" $doc }}
    {{- range $doc }}
      {{- $all = append $all . }}
    {{- end }}
  {{- end }}
{{- end }}

{{/* Now iterate over the combined list */}}
{{- range $i, $b := $all }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-%s" (include "kimia-builds.fullname" $) $b.name | trunc 63 | trimSuffix "-" }}
  labels:
    app.kubernetes.io/name: kimia-build
    app.kubernetes.io/instance: {{ include "kimia-builds.fullname" $ }}
    app.kubernetes.io/part-of: kimia-builds
    kimia-build/name: {{ $b.name }}
    {{- with $b.labels }}
{{ toYaml . | indent 4 }}
    {{- end }}
  {{- with $b.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
spec:
  backoffLimit: {{ default 1 $.Values.jobDefaults.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ default 60 $.Values.jobDefaults.ttlSecondsAfterFinished }}
  template:
    spec:
      restartPolicy: {{ default "Never" $.Values.jobDefaults.restartPolicy }}
      securityContext:
{{ toYaml $.Values.jobDefaults.securityContext | indent 8 }}
      volumes:
        - name: {{ $.Values.volumeNames.registriesConf }}
          configMap:
            name: {{ $cmName }}

      {{- if $b.init }}
      initContainers:
        {{- range $step := $b.init }}
        - name: {{ printf "build-%s" $step.name }}
          image: {{ printf "%s:%s" $.Values.global.kimia.image (default $.Values.global.kimia.tag $step.kimiaTag) }}
          imagePullPolicy: {{ $.Values.global.kimia.pullPolicy }}
          args:
            - --context={{ $step.args.context }}
            - --dockerfile={{ $step.args.dockerfile | default "Dockerfile" }}
            - --destination={{ $step.args.destination }}
            {{- with $step.args.contextSubPath }}
            - --context-sub-path
            - {{ . | quote }}
            {{- end }}
            {{- if $step.args.insecureRegistry }}
            - --insecure-registry={{ $step.args.insecureRegistry }}
            {{- end }}
            {{- if $step.args.reproducible }}
            - --reproducible
            {{- end }}
            {{- if $step.args.extraArgs }}
            {{- range $ea := $step.args.extraArgs }}
            - {{ $ea | quote }}
            {{- end }}
            {{- end }}
            {{- if $step.args.verbose }}
            - -v
            {{- end }}
          volumeMounts:
            - name: {{ $.Values.volumeNames.registriesConf }}
              mountPath: /home/kimia/.config/containers/registries.conf
              subPath: registries.conf
          securityContext:
{{ toYaml $.Values.jobDefaults.containerSecurityContext | indent 12 }}
        {{- end }}
      {{- end }}

      containers:
        - name: {{ printf "build-%s" (default "main" $b.main.name) }}
          image: {{ printf "%s:%s" $.Values.global.kimia.image (default $.Values.global.kimia.tag $b.main.kimiaTag) }}
          imagePullPolicy: {{ $.Values.global.kimia.pullPolicy }}
          args:
            - --context={{ $b.main.args.context }}
            - --dockerfile={{ $b.main.args.dockerfile | default "Dockerfile" }}
            - --destination={{ $b.main.args.destination }}
            {{- with $b.main.args.contextSubPath }}
            - --context-sub-path
            - {{ . | quote }}
            {{- end }}
            {{- if $b.main.args.insecureRegistry }}
            - --insecure-registry={{ $b.main.args.insecureRegistry }}
            {{- end }}
            {{- if $b.main.args.reproducible }}
            - --reproducible
            {{- end }}
            {{- if $b.main.args.extraArgs }}
            {{- range $ea := $b.main.args.extraArgs }}
            - {{ $ea | quote }}
            {{- end }}
            {{- end }}
            {{- if $b.main.args.verbose }}
            - -v
            {{- end }}
          volumeMounts:
            - name: {{ $.Values.volumeNames.registriesConf }}
              mountPath: /home/kimia/.config/containers/registries.conf
              subPath: registries.conf
          securityContext:
{{ toYaml $.Values.jobDefaults.containerSecurityContext | indent 12 }}
{{- end }}